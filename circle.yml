machine:
  environment:
    PACKAGE_PATH: "github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"    
    GOPATH: "$HOME/.go_workspace"
    PROJECT_DIR: "$GOPATH/src/$PACKAGE_PATH"
    GODIST: "go1.8.1.linux-amd64.tar.gz"
  post:
    # Install the specified version of Go
    - mkdir -p download
    - test -e download/$GODIST || curl -o download/$GODIST https://storage.googleapis.com/golang/$GODIST
    - sudo rm -rf /usr/local/go
    - sudo tar -C /usr/local -xzf download/$GODIST
dependencies:
  pre:    
    # Sanity check that our go version is installed
    - go version
    # Compiler and release tools
    - go get github.com/mitchellh/gox
    - go get github.com/tcnksm/ghr
  override:
    # Create our project workspace
    - mkdir -p "$PROJECT_DIR"
    # Go configuration on CircleCI is wonky.  Make sure our code
    # is in the correct Go workspace structure    
    - rsync -azC --delete ./ --include=".git" "$PROJECT_DIR"
    - go get -t -d -v $PACKAGE_PATH/...
  cache_directories:
    - ~/download
test:
  pre:
    - go vet -x $PACKAGE_PATH/...        
  override:
    - go test -v -race $PACKAGE_PATH/...
  post:
    # Multi-platform compile with version information
    - cd $PROJECT_DIR
    - gox -os="linux" -arch="arm" -ldflags "-X $PACKAGE_PATH/cmd.buildVersion=1.0.$CIRCLE_BUILD_NUM -X $PACKAGE_PATH/cmd.commitId=$CIRCLE_SHA1" -output "${CIRCLE_ARTIFACTS}/${CIRCLE_PROJECT_REPONAME}_{{.OS}}_{{.Arch}}" $PACKAGE_PATH/...
    # Setup our debian package
    - cp -r "${PROJECT_DIR}/dist" "/tmp/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}"
    - chmod 750 "/tmp/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}/DEBIAN/postinst"
    - chmod 750 "/tmp/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}/DEBIAN/prerm"
    # Copy our binary and create our debian package
    - mkdir -p "/tmp/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}/usr/bin"
    - cp "${CIRCLE_ARTIFACTS}/${CIRCLE_PROJECT_REPONAME}_linux_arm" "/tmp/${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}/usr/bin"
    - cd /tmp; dpkg -b "${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BUILD_NUM}"; mv *.deb "${CIRCLE_ARTIFACTS}";
deployment:
  release:
    branch: master
    commands:
    # Publish assets to Github
    - ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME v1.0.$CIRCLE_BUILD_NUM $CIRCLE_ARTIFACTS/ || true    